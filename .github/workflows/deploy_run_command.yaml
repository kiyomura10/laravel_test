name: AWS Run Command実行（デプロイ）

'on':
  pull_request:
    branches:
      - feature/php7.4
    types:
      - closed

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  AWS_IAM_ROLE_ARN: arn:aws:iam::121905687512:role/GoQSystemOrder-oidc-for-deploy
  DOCUMENT_NAME_PRODUCTION: GoQSystemOrder-Deploy-to-ProductionEnv
  DOCUMENT_ID_PRODUCTION: 3
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN_DEPLOY }}
  SLACK_CHANNEL_ID: C04P7RN18BH

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check GitHub Branch Name
        run: |
          echo ${{ github.ref }}
          echo ${{ github.ref_name }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_IAM_ROLE_ARN }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: check_diff
        id: diff
        shell: bash
        run: |
          if git diff --quiet HEAD^ --name-only -- /cron; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: run only if cron changed
        if: steps.diff.outputs.changed == 'true'
        run: echo "/cron に差分がありました"

      
      # - name: Execute SSM Run Command (automationEnv)
      #   id: exec-automationEnv
      #   run: |
      #     export RESPONSE=$(aws ssm send-command \
      #                         --document-name "${{ env.DOCUMENT_NAME }}" \
      #                         --document-version "${{ env.DOCUMENT_ID }}" \
      #                         --targets '[{"Key":"InstanceIds","Values":["i-0a40e49aaf8d5c828"]}]' \
      #                         --parameters '{}' \
      #                         --timeout-seconds 600 \
      #                         --max-concurrency "50" \
      #                         --max-errors "0" \
      #                         --region ap-northeast-1)
      #     export COMMAND_ID=$(echo $RESPONSE | jq .Command.CommandId)
      #     echo "command_id=$COMMAND_ID" >> $GITHUB_OUTPUT

      # - name: Check Run Command Result (automationEnv)
      #   id: check-automationEnv
      #   run: |
      #     export SHELL_RESULT=$(bash -x ./.github/scripts/check_command_result_staging.sh ${{ steps.exec-automationEnv.outputs.command_id }})
      #     echo "Run command exec result check: " . $SHELL_RESULT
      #     echo "shell_result=$SHELL_RESULT" >> $GITHUB_OUTPUT
    
      # - name: Run Command Success Notification to Slack
      #   id: slack-success-automationEnv
      #   if: ${{ (steps.check-automationEnv.outputs.shell_result == 'SUCCESS') }}
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: ${{ env.SLACK_CHANNEL_ID }}
      #     payload: |
      #       {
      #         "text": "<!here>\n🎉🎉 *${{ env.DEPLOY_ENV }}環境へデプロイ成功* 🎉🎉\n",
      #         "attachments": [
      #           {
      #             "color": "#85C1E9",
      #             "title": "${{ github.event.pull_request.title }}",
      #             "title_link": "${{ github.event.pull_request.html_url }}",
      #             "pretext": "デプロイが完了しました。",
      #             "fields": [
      #               {
      #                 "title": "RunCommandID",
      #                 "value": ${{ steps.exec-automationEnv.outputs.command_id }},
      #                 "short": false
      #               }
      #             ]
      #           }
      #         ]
      #       }

      # - name: Run Command Fail Notification to Slack
      #   id: slack-fail
      #   if: ${{ (steps.check-automationEnv.outputs.shell_result == 'FAIL') }}
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: ${{ env.SLACK_CHANNEL_ID }}
      #     payload: |
      #       {
      #         "text": "<!here>\n😈😈 デプロイ失敗 😈😈\n",
      #         "attachments": [
      #           {
      #             "color": "danger",
      #             "title": "${{ github.event.pull_request.title }}",
      #             "title_link": "${{ github.event.pull_request.html_url }}",
      #             "pretext": "${{ env.DEPLOY_ENV }}環境へのデプロイが失敗しました。RunCommandIDを確認してください。",
      #             "fields": [
      #               {
      #                 "title": "RunCommandID",
      #                 "value": ${{ steps.exec-automationEnv.outputs.command_id }},
      #                 "short": false
      #               },
      #               {
      #                 "title": "AWS Management Console",
      #                 "value": "https://ap-northeast-1.console.aws.amazon.com/systems-manager/run-command/complete-commands?region=ap-northeast-1",
      #                 "short": false
      #               }
      #             ]
      #           }
      #         ]
      #       }
